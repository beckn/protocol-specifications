openapi: 3.0.0
info:
  title: Beckn Protocol Registry Infrastructure API
  description: 'This document contains the API specification for the Registry infrastructure of a beckn-enabled network. The Registry API forms the trust layer of beckn protocol. When implemented, they enable creation of an infrastructure that allow trusted transactions between network participants to take place by means of digital signature authentication. The core infrastructure is called the Network Registry or simply, Registry. Any network participant that is listed on the registry can be assumed to have successfully passed the certfication and compliance process of the network, and hence be trusted to transact with.'
  version: 1.0.0
security:
  - SubscriberAuth: []
paths:
  /lookup:
    description: Look up platforms listed on the network registry. This is a protected endpoint only accessible to network participants that have subscribed to the network (i.e Subscribers). Any subscriber can query the Registry by sending a `Lookup` object. The Registry will respond with all the platforms that match the lookup parameters.
    post:
      tags:
        - Registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        default:
          description: Array of subscribers matching the lookup request attributes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
  /subscribe:
    description: 'Subscribe to a network. This endpoint allows registered network participants (a.k.a Subscribers), to update their subscription details like `domain`, `location`, `signing_public_key`, `encr_public_key` on the registry. The fields that can be updated can vary from network to network. Every network policy must contain the fields that can be updated for each type of subscriber. For example, the network policy may allow BAPs and BPPs to update all fields, but BGs may not be allowed to update any field except the public keys.'
    post:
      tags:
        - Registry
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Subscriber'
                - properties:
                    nonce:
                      description: A randomly generated uuid nonce value
                      type: string
                      format: uuid
      responses:
        default:
          description: The Registry returns the status of the subscription request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - UNDER_SUBSCRIPTION
  /on_subscribe:
    description: 'This endpoint is implemented by all platforms that have successfully passed the certification and compliance requirements on a network. In this endpoint, the Subscriber receives an encrypted challenge string generated by the Registry to verify the subscription details of the Network Participant sent during the `subscribe` call. During this call, Registry also validates the SSL certificate of Subscriber. If the SSL certificate is invalid, the Registry will update the subscriberâ€™s status = INVALID_SSL and call the Subscriber''s `on_subscribe` endpoint again. Anytime the state of the Subscriber changes in the registry, the Registry can make an unsolicited call to the subscriber''s `on_subscribe` endpoint. This request must be digitally signed by the Registry. The Registry''s public key must be published at a publicly accessible trusted location so that the Subscribers can save it on their systems.'
    post:
      tags:
        - 'Subscriber (BAP, BPP, BG)'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  description: The current status of the Registrant
                  type: string
                  enum:
                    - INITIATED
                    - UNDER_SUBSCRIPTION
                    - SUBSCRIBED
                    - INVALID_SSL
                    - UNSUBSCRIBED
                challenge:
                  type: string
                  description: A random string generated by the registry encrypted with the subscriber's encryption public key
              required:
                - challenge
      responses:
        default:
          description: Network Participant decrypts the challenge string using its private key and returns the decrypted value.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    description: Decrypted challenge string
                    type: string
                required:
                  - answer
components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Signature of message body using signing public key of the caller. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId="{subscriber_id}|{key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    Gps:
      description: Describes a GPS coordinate
      type: string
      pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
    Location:
      description: The physical location of something
      type: object
      properties:
        id:
          type: string
        descriptor:
          description: Physical description of something.
          type: object
          properties:
            name:
              type: string
            code:
              type: string
            short_desc:
              type: string
            long_desc:
              type: string
            additional_desc:
              type: object
              properties:
                url:
                  type: string
                content_type:
                  type: string
                  enum:
                    - text/plain
                    - text/html
                    - application/json
            media:
              type: array
              items:
                description: This object contains a url to a media file.
                type: object
                properties:
                  mimetype:
                    description: 'indicates the nature and format of the document, file, or assortment of bytes. MIME types are defined and standardized in IETF''s RFC 6838'
                    type: string
                  url:
                    description: The URL of the file
                    type: string
                    format: uri
                  signature:
                    description: The digital signature of the file signed by the sender
                    type: string
                  dsa:
                    description: The signing algorithm used by the sender
                    type: string
            images:
              type: array
              items:
                description: Describes an image
                type: object
                properties:
                  url:
                    description: URL to the image. This can be a data url or an remote url
                    type: string
                    format: uri
                  size_type:
                    description: The size of the image. The network policy can define the default dimensions of each type
                    type: string
                    enum:
                      - xs
                      - sm
                      - md
                      - lg
                      - xl
                      - custom
                  width:
                    description: Width of the image in pixels
                    type: string
                  height:
                    description: Height of the image in pixels
                    type: string
        map_url:
          description: The url to the map of the location. This can be a globally recognized map url or the one specified by the network policy.
          type: string
          format: uri
        gps:
          description: The GPS co-ordinates of this location.
          allOf:
            - $ref: '#/components/schemas/Gps'
        address:
          description: The address of this location.
          allOf:
            - description: Describes a postal address.
              type: string
        city:
          description: 'The city this location is, or is located within'
          allOf:
            - description: Describes a city
              type: object
              properties:
                name:
                  description: Name of the city
                  type: string
                code:
                  description: City code
                  type: string
        district:
          description: 'The state this location is, or is located within'
          type: string
        state:
          description: 'The state this location is, or is located within'
          allOf:
            - description: A bounded geopolitical region of governance inside a country.
              type: object
              properties:
                name:
                  type: string
                  description: Name of the state
                code:
                  type: string
                  description: State code as per country or international standards
        country:
          description: 'The country this location is, or is located within'
          allOf:
            - description: Describes a country
              type: object
              properties:
                name:
                  type: string
                  description: Name of the country
                code:
                  type: string
                  description: Country code as per ISO 3166-1 and ISO 3166-2 format
        area_code:
          type: string
        circle:
          description: Describes a circular region of a specified radius centered at a specified GPS coordinate.
          type: object
          properties:
            gps:
              $ref: '#/components/schemas/Gps'
            radius:
              $ref: '#/components/schemas/Scalar'
        polygon:
          description: The boundary polygon of this location
          type: string
        3dspace:
          description: The three dimensional region describing this location
          type: string
        rating:
          description: The rating of this location
          allOf:
            - description: 'Rating value given to the object. This can be a single value or can also contain an inequality operator like gt, gte, lt, lte. This can also contain an inequality expression containing logical operators like && and ||.'
              type: string
    Scalar:
      description: Describes a scalar
      type: object
      properties:
        type:
          type: string
          enum:
            - CONSTANT
            - VARIABLE
        value:
          description: Describes a numerical value in decimal form
          type: string
          pattern: '[+-]?([0-9]*[.])?[0-9]+'
        estimated_value:
          $ref: '#/components/schemas/Scalar/properties/value'
        computed_value:
          $ref: '#/components/schemas/Scalar/properties/value'
        range:
          type: object
          properties:
            min:
              $ref: '#/components/schemas/Scalar/properties/value'
            max:
              $ref: '#/components/schemas/Scalar/properties/value'
        unit:
          type: string
    Subscriber:
      description: A unique operational configuration of a trusted platform on a network.
      type: object
      properties:
        key_id:
          description: A unique ID of the subscription entry in a registry.
          type: string
          format: uuid
        signing_public_key:
          description: The signing public key of the subscriber
          type: string
        encr_public_key:
          description: The encryption public key of the subscriber
          type: string
        valid_from:
          description: Date-time which the signing and encryption keys are valid from
          type: string
          format: date-time
        valid_until:
          description: Time till which the signing and encryption keys are valid
          type: string
          format: date-time
        status:
          description: Status of the subscription
          type: string
          enum:
            - INITIATED
            - UNDER_SUBSCRIPTION
            - SUBSCRIBED
            - EXPIRED
            - UNSUBSCRIBED
            - INVALID_SSL
        subscriber_id:
          description: 'A globally unique identifier of the platform, Typically it is the fully qualified domain name (FQDN) of the platform.'
          type: string
        url:
          description: The callback URL of the Subscriber. This should necessarily contain the same domain name as set in `subscriber_id``.
          type: string
          format: uri
        type:
          description: The role of subscriber on the network
          type: string
          enum:
            - BAP
            - BPP
            - BG
        domain:
          description: Operating industry domain that this subscriber offers its products or services in. A single subscriber can operate in multiple domains. Each operating domain must have a unique subscriber object entry in the req
          allOf:
            - description: 'Standard code representing the domain. The standard is usually published as part of the network policy. Furthermore, the network facilitator should also provide a mechanism to provide the supported domains of a network.'
        location:
          description: The region of operation of this subscriber
          allOf:
            - $ref: '#/components/schemas/Location'
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
